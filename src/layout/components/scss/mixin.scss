// Миксины стилей
// Можно писать "null" если не надо выводить свойство

// Clearfix
// @include clearfix;
@mixin clearfix {
	&::after {
		content: '';
		display: block;
		height: 0;
		clear: both;
		visibility: hidden;
	}
}

// Flex
// @include flex(row, center, center, wrap)
@mixin flex($flex-direction, $justify-content, $align-items, $wrap) {
	display: flex;
	flex-direction: $flex-direction;
	justify-content: $justify-content;
	align-items: $align-items;
	flex-wrap: $wrap;
}

// Scrollbar
// @include scroll(10px, null, black, gray, null, null)
@mixin scroll($scroll-width, $scroll-height, $scroll-color, $scroll-background-color, $scroll-hover, $scroll-radius) {
	&::-webkit-scrollbar {
		width: $scroll-width;
		height: $scroll-height
	}

	&::-webkit-scrollbar-thumb {
		background: $scroll-color;
		border-radius: $scroll-radius
	}

	&::-webkit-scrollbar-track {
		background: $scroll-background-color
	}

	&::-webkit-scrollbar-thumb:hover {
		background: $scroll-hover
	}
}

// Adaptive font-size, include first and last value
$templateSize: 1920 - 17;
@mixin fz($pcSize, $mobSize) {
	$addSize: $pcSize - $mobSize;
	$addMobSize: $addSize + $addSize * 0.7;
	@include max-screen(767px) {
		font-size: calc(#{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$templateSize}));
	}
	@include min-screen(767px) {
		font-size: calc(#{$mobSize + px} + #{$addSize} *  (100vw / #{$templateSize}));
	}
}

// Triangle
// @include triangle(up, 6px, black)
@mixin triangle($triangle-direction, $triangle-size, $triangle-color) {
	content: '';
	width: 0;
	height: 0;
	display: block;
	@if ($triangle-direction == 'up') {
		border-bottom: $triangle-size solid $triangle-color;
		border-left: 1/2*$triangle-size solid transparent;
		border-right: 1/2*$triangle-size solid transparent;
	}
	@if ($triangle-direction == 'down') {
		border-top: $triangle-size solid $triangle-color;
		border-left: 1/2*$triangle-size solid transparent;
		border-right: 1/2*$triangle-size solid transparent;
	}
	@if ($triangle-direction == 'left') {
		border-top: 1/2*$triangle-size solid transparent;
		border-bottom: 1/2*$triangle-size solid transparent;
		border-right: $triangle-size solid $triangle-color;
	}
	@if ($triangle-direction == 'right') {
		border-top: 1/2*$triangle-size solid transparent;
		border-bottom: 1/2*$triangle-size solid transparent;
		border-left: $triangle-size solid $triangle-color;
	}
}